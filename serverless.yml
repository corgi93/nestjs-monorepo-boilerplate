service: itsuda-api
plugins:
  - serverless-jetpack
  - serverless-plugin-monorepo
  - serverless-offline

frameworkVersion: '3'
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-2'}
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
    # 실행하는데 필요한 권한 설정
  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - lambda:*
  #       - logs:*
  #       - ec2:CreateNetworkInterface
  #       - ec2:DescribeNetworkInterfaces
  #       - ec2:DeleteNetworkInterface
  #       - s3:*
  #     Resource:
  #       - '*'

package:
  # include:
  #   - ./node-modules

  exclude:
    - './node_module/**'
    - './main/**'
    - '**/node_modules/aws-sdk/**'
  excludeDevDependencies: true
  individually: true

custom:
  jetpack:
    base: '..'
  serverless-offline:
    httpPort: 8000

functions:
  event-service:
    handler: ./dist/apps/event-service/src/main.handler
    # handler: .build/apps/event-service/src/main.handler
    events:
      - http:
          path: v1/event-service
          method: ANY
          # path: /
      - http:
          path: v1/event-service/{proxy+}
          method: ANY
          # path: '{proxy+}'
  auth-service:
    handler: ./dist/apps/auth-service/src/lambda.handler
    # handler: .build/apps/event-service/src/main.handler
    events:
      - http:
          path: v1/auth-service
          method: ANY
          # path: /
      - http:
          path: v1/auth-service/{proxy+}
          method: ANY
          # path: '{proxy+}'
